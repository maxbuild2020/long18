{"remainingRequest":"/Users/frank/Desktop/project-demo/long18/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/frank/Desktop/project-demo/long18/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/frank/Desktop/project-demo/long18/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/frank/Desktop/project-demo/long18/src/components/Content.vue?vue&type=template&id=7eab81f9&scoped=true&","dependencies":[{"path":"/Users/frank/Desktop/project-demo/long18/src/components/Content.vue","mtime":1595608989871},{"path":"/Users/frank/Desktop/project-demo/long18/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/frank/Desktop/project-demo/long18/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/frank/Desktop/project-demo/long18/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/frank/Desktop/project-demo/long18/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}